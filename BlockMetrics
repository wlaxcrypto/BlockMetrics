# scripts/historical_data.py

import requests
import pandas as pd

def fetch_historical_data(api_url, start_date, end_date):
    """
    Fetch historical blockchain data from an API.
    
    :param api_url: Base URL of the blockchain API
    :param start_date: Start date for the historical data
    :param end_date: End date for the historical data
    :return: DataFrame with historical data
    """
    response = requests.get(f'{api_url}/historical_data', params={'start_date': start_date, 'end_date': end_date})
    response.raise_for_status()
    data = response.json()
    df = pd.DataFrame(data)
    return df

def analyze_historical_data(df):
    """
    Analyze historical blockchain data.
    
    :param df: DataFrame with historical data
    :return: Analysis results as DataFrame
    """
    analysis = {
        'start_date': df['date'].min(),
        'end_date': df['date'].max(),
        'total_blocks': df['blocks'].sum(),
        'total_transactions': df['transactions'].sum()
    }
    analysis_df = pd.DataFrame([analysis])
    return analysis_df

# Example usage:
# api_url = 'https://api.blockchain.example.com'
# start_date = '2023-01-01'
# end_date = '2023-01-31'
# historical_data_df = fetch_historical_data(api_url, start_date, end_date)
# print(historical_data_df)
# historical_data_analysis_df = analyze_historical_data(historical_data_df)
# print(historical_data_analysis_df)
